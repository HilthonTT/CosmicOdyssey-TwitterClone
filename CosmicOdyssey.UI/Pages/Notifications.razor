@page "/Notifications"
@attribute [Authorize]
@inject AuthenticationStateProvider AuthProvider
@inject IProfileData ProfileData
@inject INotificationData NotificationData

<Header Label="Notifications" ShowBackArrow />

 @if (notifications is null || notifications?.Count == 0)
{
    <div class="text-neutral-600 text-center p-6 text-xl">
        No notifications
    </div>
}
else
{
    <div class="flex flex-col">
        <Virtualize Items="notifications" Context="notification" OverscanCount="5">
            <div @key="@notification.Id" class="flex flex-row items-center p-2 gap-4 border-b-[1px] border-neutral-800">
                <MudIcon Icon="@Icons.Custom.Brands.Twitter" Size="Size.Large" Class="text-white" Title="Notification" />
                <p class="text-white">
                    @notification.Body
                </p>
            </div>
        </Virtualize>
    </div>
}

@code {
    private ProfileModel currentProfile;
    private List<NotificationModel> notifications;

    protected override async Task OnInitializedAsync()
    {
        currentProfile = await AuthProvider.GetUserFromAuthAsync(ProfileData);

        notifications = await NotificationData.GetProfileNotificationAsync(currentProfile.Id);
    }
}
